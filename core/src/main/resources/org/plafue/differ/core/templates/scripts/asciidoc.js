//https://github.com/espadrine/AsciiDocBox/blob/master/cm/mode/asciidoc/asciidoc.js minified
CodeMirror.defineMode("asciidoc",function(e,t){var n=function(){function t(e){var t=/\w/.test(e)?"\\b":"(?:\\B|^)";return t+e+"[^"+e+"].*?"+e+"(?![\\w*])"}var e="[a-zA-Z¡-￿]+\\b";this.$rules={start:[{token:"empty",regex:/$/},{token:"literal",regex:/^\.{4,}\s*$/,next:"listingBlock"},{token:"literal",regex:/^-{4,}\s*$/,next:"literalBlock"},{token:"string",regex:/^\+{4,}\s*$/,next:"passthroughBlock"},{token:"keyword",regex:/^={4,}\s*$/},{token:"text",regex:/^\s*$/},{token:"empty",regex:"",next:"dissallowDelimitedBlock"}],dissallowDelimitedBlock:[{include:"paragraphEnd"},{token:"comment",regex:"^//.+$"},{token:"keyword",regex:"^(?:NOTE|TIP|IMPORTANT|WARNING|CAUTION):"},{include:"listStart"},{token:"literal",regex:/^\s+.+$/,next:"indentedBlock"},{token:"empty",regex:"",next:"text"}],paragraphEnd:[{token:"doc.comment",regex:/^\/{4,}\s*$/,next:"commentBlock"},{token:"tableBlock",regex:/^\s*[|!]=+\s*$/,next:"tableBlock"},{token:"keyword",regex:/^(?:--|''')\s*$/,next:"start"},{token:"option",regex:/^\[.*\]\s*$/,next:"start"},{token:"pageBreak",regex:/^>{3,}$/,next:"start"},{token:"literal",regex:/^\.{4,}\s*$/,next:"listingBlock"},{token:"titleUnderline",regex:/^(?:={2,}|-{2,}|~{2,}|\^{2,}|\+{2,})\s*$/,next:"start"},{token:"singleLineTitle",regex:/^={1,5}\s+\S.*$/,next:"start"},{token:"otherBlock",regex:/^(?:\*{2,}|_{2,})\s*$/,next:"start"},{token:"optionalTitle",regex:/^\.[^.\s].+$/,next:"start"}],listStart:[{token:"keyword",regex:/^\s*(?:\d+\.|[a-zA-Z]\.|[ixvmIXVM]+\)|\*{1,5}|-|\.{1,5})\s/,next:"listText"},{token:"meta.tag",regex:/^.+(?::{2,4}|;;)(?: |$)/,next:"listText"},{token:"support.function.list.callout",regex:/^(?:<\d+>|\d+>|>) /,next:"text"},{token:"keyword",regex:/^\+\s*$/,next:"start"}],text:[{token:["link","variable.language"],regex:/((?:https?:\/\/|ftp:\/\/|file:\/\/|mailto:|callto:)[^\s\[]+)(\[.*?\])/},{token:"link",regex:/(?:https?:\/\/|ftp:\/\/|file:\/\/|mailto:|callto:)[^\s\[]+/},{token:"link",regex:/\b[\w\.\/\-]+@[\w\.\/\-]+\b/},{include:"macros"},{include:"paragraphEnd"},{token:"literal",regex:/\+{3,}/,next:"smallPassthrough"},{token:"escape",regex:/\((?:C|TM|R)\)|\.{3}|->|<-|=>|<=|&#(?:\d+|x[a-fA-F\d]+);|(?: |^)--(?=\s+\S)/},{token:"escape",regex:/\\[_*'`+#]|\\{2}[_*'`+#]{2}/},{token:"keyword",regex:/\s\+$/},{token:"text",regex:e},{token:["keyword","string","keyword"],regex:/(<<[\w\d\-$]+,)(.*?)(>>|$)/},{token:"keyword",regex:/<<[\w\d\-$]+,?|>>/},{token:"constant.character",regex:/\({2,3}.*?\){2,3}/},{token:"keyword",regex:/\[\[.+?\]\]/},{token:"support",regex:/^\[{3}[\w\d =\-]+\]{3}/},{include:"quotes"},{token:"empty",regex:/^\s*$/,next:"start"}],listText:[{include:"listStart"},{include:"text"}],indentedBlock:[{token:"literal",regex:/^[\s\w].+$/,next:"indentedBlock"},{token:"literal",regex:"",next:"start"}],listingBlock:[{token:"literal",regex:/^\.{4,}\s*$/,next:"dissallowDelimitedBlock"},{token:"constant.numeric",regex:"<\\d+>"},{token:"literal",regex:"[^<]+"},{token:"literal",regex:"<"}],literalBlock:[{token:"literal",regex:/^-{4,}\s*$/,next:"dissallowDelimitedBlock"},{token:"constant.numeric",regex:"<\\d+>"},{token:"literal",regex:"[^<]+"},{token:"literal",regex:"<"}],passthroughBlock:[{token:"literal",regex:/^\+{4,}\s*$/,next:"dissallowDelimitedBlock"},{token:"literal",regex:e+"|\\d+"},{include:"macros"},{token:"literal",regex:"."}],smallPassthrough:[{token:"literal",regex:/[+]{3,}/,next:"dissallowDelimitedBlock"},{token:"literal",regex:/^\s*$/,next:"dissallowDelimitedBlock"},{token:"literal",regex:e+"|\\d+"},{include:"macros"}],commentBlock:[{token:"doc.comment",regex:/^\/{4,}\s*$/,next:"dissallowDelimitedBlock"},{token:"doc.comment",regex:"^.*$"}],tableBlock:[{token:"tableBlock",regex:/^\s*\|={3,}\s*$/,next:"dissallowDelimitedBlock"},{token:"tableBlock",regex:/^\s*!={3,}\s*$/,next:"innerTableBlock"},{token:"tableBlock",regex:/\|/},{include:"text",noEscape:true}],innerTableBlock:[{token:"tableBlock",regex:/^\s*!={3,}\s*$/,next:"tableBlock"},{token:"tableBlock",regex:/^\s*|={3,}\s*$/,next:"dissallowDelimitedBlock"},{token:"tableBlock",regex:/\!/}],macros:[{token:"macro",regex:/{[\w\-$]+}/},{token:["text","string","text","constant.character","text"],regex:/({)([\w\-$]+)(:)?(.+)?(})/},{token:["text","markup.list.macro","keyword","string"],regex:/(\w+)(footnote(?:ref)?::?)([^\s\[]+)?(\[.*?\])?/},{token:["markup.list.macro","keyword","string"],regex:/([a-zA-Z\-][\w\.\/\-]*::?)([^\s\[]+)(\[.*?\])?/},{token:["markup.list.macro","keyword"],regex:/([a-zA-Z\-][\w\.\/\-]+::?)(\[.*?\])/},{token:"keyword",regex:/^:.+?:(?= |$)/}],quotes:[{token:"string.italic",regex:/__[^_\s].*?__/},{token:"string.italic",regex:t("_")},{token:"keyword.bold",regex:/\*\*[^*\s].*?\*\*/},{token:"keyword.bold",regex:t("\\*")},{token:"literal",regex:t("\\+")},{token:"literal",regex:/\+\+[^+\s].*?\+\+/},{token:"literal",regex:/\$\$.+?\$\$/},{token:"literal",regex:t("`")},{token:"keyword",regex:t("^")},{token:"keyword",regex:t("~")},{token:"keyword",regex:/##?/},{token:"keyword",regex:/(?:\B|^)``|\b''/}]};var n={macro:"constant.character",tableBlock:"doc.comment",titleUnderline:"markup.heading",singleLineTitle:"markup.heading",pageBreak:"string",option:"string.regexp",otherBlock:"markup.list",literal:"support.function",optionalTitle:"constant.numeric",escape:"constant.language.escape",link:"markup.underline.list"};for(var r in this.$rules){var i=this.$rules[r];for(var s=i.length;s--;){var o=i[s];if(o.include||typeof o=="string"){var u=[s,1].concat(this.$rules[o.include||o]);if(o.noEscape){u=u.filter(function(e){return!e.next})}i.splice.apply(i,u)}else if(o.token in n){o.token=n[o.token]}}}};var r=1e3;var i=function(e){this.states=e;this.regExps={};this.matchMappings={};for(var t in this.states){var n=this.states[t];var r=[];var i=0;var s=this.matchMappings[t]={defaultToken:"text"};var o="g";var u=[];for(var a=0;a<n.length;a++){var f=n[a];if(f.defaultToken)s.defaultToken=f.defaultToken;if(f.caseInsensitive)o="gi";if(f.regex==null)continue;if(f.regex instanceof RegExp)f.regex=f.regex.toString().slice(1,-1);var l=f.regex;var c=(new RegExp("(?:("+l+")|(.))")).exec("a").length-2;if(Array.isArray(f.token)){if(f.token.length==1||c==1){f.token=f.token[0]}else if(c-1!=f.token.length){throw new Error("number of classes and regexp groups in '"+f.token+"'\n'"+f.regex+"' doesn't match\n"+(c-1)+"!="+f.token.length)}else{f.tokenArray=f.token;f.token=null;f.onMatch=this.$arrayTokens}}else if(typeof f.token=="function"&&!f.onMatch){if(c>1)f.onMatch=this.$applyToken;else f.onMatch=f.token}if(c>1){if(/\\\d/.test(f.regex)){l=f.regex.replace(/\\([0-9]+)/g,function(e,t){return"\\"+(parseInt(t,10)+i+1)})}else{c=1;l=this.removeCapturingGroups(f.regex)}if(!f.splitRegex&&typeof f.token!="string")u.push(f)}s[i]=a;i+=c;r.push(l);if(!f.onMatch)f.onMatch=null}u.forEach(function(e){e.splitRegex=this.createSplitterRegexp(e.regex,o)},this);this.regExps[t]=new RegExp("("+r.join(")|(")+")|($)",o)}};(function(){this.$setMaxTokenCount=function(e){r=e|0};this.$applyToken=function(e){var t=this.splitRegex.exec(e).slice(1);var n=this.token.apply(this,t);if(typeof n==="string")return[{type:n,value:e}];var r=[];for(var i=0,s=n.length;i<s;i++){if(t[i])r[r.length]={type:n[i],value:t[i]}}return r},this.$arrayTokens=function(e){if(!e)return[];var t=this.splitRegex.exec(e);if(!t)return"text";var n=[];var r=this.tokenArray;for(var i=0,s=r.length;i<s;i++){if(t[i+1])n[n.length]={type:r[i],value:t[i+1]}}return n};this.removeCapturingGroups=function(e){var t=e.replace(/\[(?:\\.|[^\]])*?\]|\\.|\(\?[:=!]|(\()/g,function(e,t){return t?"(?:":e});return t};this.createSplitterRegexp=function(e,t){if(e.indexOf("(?=")!=-1){var n=0;var r=false;var i={};e.replace(/(\\.)|(\((?:\?[=!])?)|(\))|([\[\]])/g,function(e,t,s,o,u,a){if(r){r=u!="]"}else if(u){r=true}else if(o){if(n==i.stack){i.end=a+1;i.stack=-1}n--}else if(s){n++;if(s.length!=1){i.stack=n;i.start=a}}return e});if(i.end!=null&&/^\)*$/.test(e.substr(i.end)))e=e.substring(0,i.start)+e.substr(i.end)}return new RegExp(e,(t||"").replace("g",""))};this.getLineTokens=function(e,t){if(t&&typeof t!="string"){var n=t.slice(0);t=n[0]}else var n=[];var i=t||"start";var s=this.states[i];if(!s){i="start";s=this.states[i]}var o=this.matchMappings[i];var u=this.regExps[i];u.lastIndex=0;var a,f=[];var l=0;var c={type:null,value:""};while(a=u.exec(e)){var h=o.defaultToken;var p=null;var d=a[0];var v=u.lastIndex;if(v-d.length>l){var m=e.substring(l,v-d.length);if(c.type==h){c.value+=m}else{if(c.type)f.push(c);c={type:h,value:m}}}for(var g=0;g<a.length-2;g++){if(a[g+1]===undefined)continue;p=s[o[g]];if(p.onMatch)h=p.onMatch(d,i,n);else h=p.token;if(p.next){if(typeof p.next=="string")i=p.next;else i=p.next(i,n);s=this.states[i];if(!s){window.console&&console.error&&console.error(i,"doesn't exist");i="start";s=this.states[i]}o=this.matchMappings[i];l=v;u=this.regExps[i];u.lastIndex=v}break}if(d){if(typeof h=="string"){if((!p||p.merge!==false)&&c.type===h){c.value+=d}else{if(c.type)f.push(c);c={type:h,value:d}}}else if(h){if(c.type)f.push(c);c={type:null,value:""};for(var g=0;g<h.length;g++)f.push(h[g])}}if(l==e.length)break;l=v;if(f.length>r){while(l<e.length){if(c.type)f.push(c);c={value:e.substring(l,l+=2e3),type:"overflow"}}i="start";n=[];break}}if(c.type)f.push(c);if(n.length>1){if(n[0]!==i)n.unshift(i)}return{tokens:f,state:n.length?n:i}}}).call(i.prototype);var s={empty:null,text:null,keyword:"keyword",control:"keyword",operator:"operator",constant:"atom",numeric:"number",character:"atom",escape:"atom",variable:"variable",parameter:"variable-3",language:"variable-2",comment:"comment",line:"comment","double-slash":"comment","double-dash":"comment","number-sign":"comment",percentage:"comment",block:"comment",documentation:"comment",string:"string",quoted:"string",single:"string","double":"string",triple:"string",unquoted:"string",interpolated:"string",regexp:"string-2",meta:"meta",literal:"qualifier",support:"builtin",markup:"tag",underline:"link",link:"link",bold:"strong",heading:"header",italic:"em",list:"variable-2",numbered:"variable-2",unnumbered:"variable-2",quote:"quote",raw:"variable-2",invalid:"error",illegal:"invalidchar",deprecated:"error"};var o=function(e){var t=null;for(var n=0;n<e.length;n++){if(s[e[n]]!==undefined){t=s[e[n]]}}return t};var u=function(e,t){var n=t.plannedTokens.shift();if(n===undefined){return null}e.match(n.value);var r=n.type.split(".");return o(r)};var a=function(e,t){if(t.plannedTokens.length>0){return u(e,t)}var n=t.current;var r=e.match(/.*$/,false)[0];var i=l.getLineTokens(r,n);t.plannedTokens=i.tokens;t.current=i.state;return u(e,t)};var f=new n;var l=new i(f.$rules);return{startState:function(){return{current:"start",plannedTokens:[]}},blankLine:function(e){a("",e)},token:a}});CodeMirror.defineMIME("text/x-asciidoc","asciidoc")